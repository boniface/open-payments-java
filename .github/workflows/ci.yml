name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        java: [ '25' ]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones disabled for better analysis

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        if: runner.os != 'Windows'

      - name: Check code formatting
        run: ./gradlew spotlessCheck --no-daemon

      - name: Run Checkstyle
        run: ./gradlew checkstyleMain checkstyleTest --no-daemon

      - name: Build with Gradle
        run: ./gradlew build --no-daemon --stacktrace

      - name: Run unit tests
        run: ./gradlew test --no-daemon --stacktrace

      - name: Run integration tests
        run: ./gradlew integrationTest --no-daemon --stacktrace

      - name: Generate JaCoCo coverage report
        run: ./gradlew jacocoTestReport --no-daemon

      - name: Verify code coverage (80% minimum)
        run: ./gradlew jacocoTestCoverageVerification --no-daemon

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.os == 'ubuntu-latest'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./build/reports/jacoco/test/jacocoTestReport.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.java }}
          path: |
            build/reports/tests/
            build/test-results/

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest'
        with:
          name: coverage-reports
          path: build/reports/jacoco/

      - name: Comment PR with coverage
        if: github.event_name == 'pull_request' && matrix.os == 'ubuntu-latest'
        uses: madrapps/jacoco-report@v1.6.1
        with:
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 80
          min-coverage-changed-files: 80
          title: 'Code Coverage Report'

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'temurin'
          cache: gradle

      - name: Run dependency vulnerability check
        run: ./gradlew dependencyCheckAnalyze --no-daemon || true

      - name: Upload dependency check report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-check-report
          path: build/reports/dependency-check-report.html

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'temurin'
          cache: gradle

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Run SpotBugs
        run: ./gradlew spotbugsMain --no-daemon || true

      - name: Run PMD
        run: ./gradlew pmdMain --no-daemon || true

      - name: Upload SpotBugs report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: spotbugs-report
          path: build/reports/spotbugs/

      - name: Upload PMD report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pmd-report
          path: build/reports/pmd/

      - name: SonarCloud Scan
        if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonar --no-daemon \
            -Dsonar.projectKey=yourusername_open-payments-java \
            -Dsonar.organization=yourusername \
            -Dsonar.host.url=https://sonarcloud.io || true
