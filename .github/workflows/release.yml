name: Release to Maven Central

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Release to Maven Central
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'temurin'
          cache: gradle

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Extract version from tag
        id: extract_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Releasing version $VERSION"

      - name: Run all quality checks
        run: |
          ./gradlew clean build \
            spotlessCheck \
            checkstyleMain checkstyleTest \
            test integrationTest \
            jacocoTestReport jacocoTestCoverageVerification \
            --no-daemon --stacktrace

      - name: Build and sign artifacts
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          ./gradlew build \
            publishToMavenLocal \
            signMavenJavaPublication \
            --no-daemon --stacktrace

      - name: Publish to Maven Central
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
        run: |
          ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository \
            --no-daemon --stacktrace

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.extract_version.outputs.VERSION }}
          body: |
            ## Release ${{ steps.extract_version.outputs.VERSION }}

            ### Installation

            #### Gradle
            ```kotlin
            dependencies {
                implementation("zm.hashcode:open-payments-java:${{ steps.extract_version.outputs.VERSION }}")
            }
            ```

            #### Maven
            ```xml
            <dependency>
                <groupId>zm.hashcode</groupId>
                <artifactId>open-payments-java</artifactId>
                <version>${{ steps.extract_version.outputs.VERSION }}</version>
            </dependency>
            ```

            ### Changes
            See [CHANGELOG.md](CHANGELOG.md) for details.
          draft: false
          prerelease: false
          files: |
            build/libs/*.jar
            build/publications/maven/pom-default.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish JavaDoc
        run: |
          ./gradlew javadoc --no-daemon

      - name: Deploy JavaDoc to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/docs/javadoc
          destination_dir: javadoc/${{ steps.extract_version.outputs.VERSION }}

  verify-release:
    name: Verify Maven Central Release
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Wait for Maven Central sync
        run: sleep 300  # Wait 5 minutes for Maven Central to sync

      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'temurin'

      - name: Extract version from tag
        id: extract_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Verify artifact is available
        run: |
          curl -f "https://repo1.maven.org/maven2/zm/hashcode/open-payments-java/${{ steps.extract_version.outputs.VERSION }}/open-payments-java-${{ steps.extract_version.outputs.VERSION }}.pom" || exit 1
          echo "âœ… Artifact successfully published to Maven Central!"
